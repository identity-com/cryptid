name: Programs-Cryptid-Signer
on:
  push:
    paths:
      - 'programs/cryptid_signer/**'
  pull_request:
jobs:
  program-lint:
    name: Format and lint the cryptid on-chain program on Rust ${{ matrix.rust }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['1.62']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: cargo-clippy-${{ hashFiles('Cargo.lock') }}

      - name: Run Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- --deny=warnings

  program-unit-test:
    name: Test program on Rust ${{ matrix.rust }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['1.62']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: cargo-test-${{ hashFiles('Cargo.lock') }}

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test


  program-integration-test:
    name: Integration test the cryptid on-chain program on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }}, and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['1.62']
        solana: ['v1.10.32']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: cargo-build-${{ hashFiles('Cargo.lock') }}

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build programs
        uses: actions-rs/cargo@v1
        with:
          command: build-bpf

      - name: Run integration tests
        uses: actions-rs/cargo@v1
        with:
          command: test-bpf
        env:
          RUST_LOG: solana_rbpf::vm=debug,solana_runtime::message_processor=debug,solana_runtime::system_instruction_processor=trace,solana_program_test=info,cryptid_signer=trace
          RUST_BACKTRACE: 1

  program-dev-deploy:
    name: Deploy dev cryptid on-chain program, built on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }}, and ${{ matrix.os }}
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    needs: [program-lint, program-unit-test, program-integration-test]
    env:
      SOLANA_PROGRAM_ID: tcrjc6mfci8bQLmXPfrVw9fJm9Y5tr268tByjSQmSe9
      SOLANA_AUTHORITY: ${{ secrets.SOLANA_DEV_AUTHORITY }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: ['1.62']
        solana: ['v1.10.32']
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: cargo-build-${{ hashFiles('Cargo.lock') }}

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build programs
        uses: actions-rs/cargo@v1
        with:
          command: build-bpf

      - name: Deploy dev program
        run: |
          echo "$SOLANA_AUTHORITY" > ~/.config/solana/id.json
          solana config set --url devnet
          solana program deploy target/deploy/cryptid_signer.so --program-id $SOLANA_PROGRAM_ID
          solana program show $SOLANA_PROGRAM_ID
